---
#- name: format DFS
#  command: bash -c "/opt/hadoop/bin/hdfs namenode -format" creates=/var/hadoop/dfs
#  become: yes
#  become_user: hadoop

- name: create the name dirs
  file: path=/{{ item }} state=directory owner={{ hadoop_user }} group={{ hadoop_user }}
  with_items: "{{ hdfs_namenode_name_dirs }}"

- name: create {{ hadoop_var_prefix }}/dfs
  file: state=directory dest={{ hadoop_var_prefix }}/dfs owner={{ hadoop_user }} group={{ hadoop_user }}

- name: create {{ hadoop_var_prefix }}/dfs/name
  file: state=directory dest={{ hadoop_var_prefix }}/dfs/name owner={{ hadoop_user }} group={{ hadoop_user }}

- name: put hdfs-namenode-{{ env_name }}.rb eye config file
  template: src=hdfs/namenode.rb dest=/etc/eye/hdfs-namenode-{{ env_name }}.rb owner=root group=root mode=0644 backup=yes
  when: "(not (ansible_distribution == 'Ubuntu' and ansible_distribution_version|version_compare('16.04', '>='))) and (not (ansible_os_family == 'Elbrus'))"

- name: load config in eye
  command: bash -c "source /usr/local/rvm/scripts/rvm && eye l /etc/eye/apps.eye"
  become: yes
  when: "(not (ansible_distribution == 'Ubuntu' and ansible_distribution_version|version_compare('16.04', '>='))) and (not (ansible_os_family == 'Elbrus'))"

- name: put systemd unit file to its destination
  template: src=hdfs-namenode.service dest=/etc/systemd/system/hdfs-namenode-{{ env_name }}.service owner=root group=root mode=0644
  when: "ansible_distribution == 'Ubuntu' and ansible_distribution_version|version_compare('16.04', '>=')"
  notify: systemctl daemon-reload

- name: enable hdfs-namenode service
  service: name=hdfs-namenode-{{ env_name }} enabled=yes state=started
  when: "ansible_distribution == 'Ubuntu' and ansible_distribution_version|version_compare('16.04', '>=')"

- name: put {{ hadoop_distr_prefix }}/bin/namenode_start.sh
  template: src=namenode_start.sh dest={{ hadoop_distr_prefix }}/bin/namenode_start.sh
  when: "ansible_os_family == 'Elbrus'"

- name: chmod {{ hadoop_distr_prefix }}/bin/namenode_start.sh
  shell: chmod 0755 {{ hadoop_distr_prefix }}/bin/namenode_start.sh
  when: "ansible_os_family == 'Elbrus'"
